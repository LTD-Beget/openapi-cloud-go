/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPgUpdateRemoteAccessResponse struct for PostgresqlPgUpdateRemoteAccessResponse
type PostgresqlPgUpdateRemoteAccessResponse struct {
	State *PostgresqlPgRemoteAccessState `json:"state,omitempty"`
	Error *PostgresqlPgUpdateRemoteAccessResponseError `json:"error,omitempty"`
}

// NewPostgresqlPgUpdateRemoteAccessResponse instantiates a new PostgresqlPgUpdateRemoteAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPgUpdateRemoteAccessResponse() *PostgresqlPgUpdateRemoteAccessResponse {
	this := PostgresqlPgUpdateRemoteAccessResponse{}
	return &this
}

// NewPostgresqlPgUpdateRemoteAccessResponseWithDefaults instantiates a new PostgresqlPgUpdateRemoteAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPgUpdateRemoteAccessResponseWithDefaults() *PostgresqlPgUpdateRemoteAccessResponse {
	this := PostgresqlPgUpdateRemoteAccessResponse{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PostgresqlPgUpdateRemoteAccessResponse) GetState() PostgresqlPgRemoteAccessState {
	if o == nil || isNil(o.State) {
		var ret PostgresqlPgRemoteAccessState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgUpdateRemoteAccessResponse) GetStateOk() (*PostgresqlPgRemoteAccessState, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PostgresqlPgUpdateRemoteAccessResponse) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given PostgresqlPgRemoteAccessState and assigns it to the State field.
func (o *PostgresqlPgUpdateRemoteAccessResponse) SetState(v PostgresqlPgRemoteAccessState) {
	o.State = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PostgresqlPgUpdateRemoteAccessResponse) GetError() PostgresqlPgUpdateRemoteAccessResponseError {
	if o == nil || isNil(o.Error) {
		var ret PostgresqlPgUpdateRemoteAccessResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgUpdateRemoteAccessResponse) GetErrorOk() (*PostgresqlPgUpdateRemoteAccessResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PostgresqlPgUpdateRemoteAccessResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given PostgresqlPgUpdateRemoteAccessResponseError and assigns it to the Error field.
func (o *PostgresqlPgUpdateRemoteAccessResponse) SetError(v PostgresqlPgUpdateRemoteAccessResponseError) {
	o.Error = &v
}

func (o PostgresqlPgUpdateRemoteAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPgUpdateRemoteAccessResponse struct {
	value *PostgresqlPgUpdateRemoteAccessResponse
	isSet bool
}

func (v NullablePostgresqlPgUpdateRemoteAccessResponse) Get() *PostgresqlPgUpdateRemoteAccessResponse {
	return v.value
}

func (v *NullablePostgresqlPgUpdateRemoteAccessResponse) Set(val *PostgresqlPgUpdateRemoteAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPgUpdateRemoteAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPgUpdateRemoteAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPgUpdateRemoteAccessResponse(val *PostgresqlPgUpdateRemoteAccessResponse) *NullablePostgresqlPgUpdateRemoteAccessResponse {
	return &NullablePostgresqlPgUpdateRemoteAccessResponse{value: val, isSet: true}
}

func (v NullablePostgresqlPgUpdateRemoteAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPgUpdateRemoteAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


