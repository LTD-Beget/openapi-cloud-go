/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// CloudGetConfigurationListResponse struct for CloudGetConfigurationListResponse
type CloudGetConfigurationListResponse struct {
	Configuration []CloudServiceConfiguration `json:"configuration,omitempty"`
}

// NewCloudGetConfigurationListResponse instantiates a new CloudGetConfigurationListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudGetConfigurationListResponse() *CloudGetConfigurationListResponse {
	this := CloudGetConfigurationListResponse{}
	return &this
}

// NewCloudGetConfigurationListResponseWithDefaults instantiates a new CloudGetConfigurationListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudGetConfigurationListResponseWithDefaults() *CloudGetConfigurationListResponse {
	this := CloudGetConfigurationListResponse{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CloudGetConfigurationListResponse) GetConfiguration() []CloudServiceConfiguration {
	if o == nil || isNil(o.Configuration) {
		var ret []CloudServiceConfiguration
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudGetConfigurationListResponse) GetConfigurationOk() ([]CloudServiceConfiguration, bool) {
	if o == nil || isNil(o.Configuration) {
    return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CloudGetConfigurationListResponse) HasConfiguration() bool {
	if o != nil && !isNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []CloudServiceConfiguration and assigns it to the Configuration field.
func (o *CloudGetConfigurationListResponse) SetConfiguration(v []CloudServiceConfiguration) {
	o.Configuration = v
}

func (o CloudGetConfigurationListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableCloudGetConfigurationListResponse struct {
	value *CloudGetConfigurationListResponse
	isSet bool
}

func (v NullableCloudGetConfigurationListResponse) Get() *CloudGetConfigurationListResponse {
	return v.value
}

func (v *NullableCloudGetConfigurationListResponse) Set(val *CloudGetConfigurationListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudGetConfigurationListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudGetConfigurationListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudGetConfigurationListResponse(val *CloudGetConfigurationListResponse) *NullableCloudGetConfigurationListResponse {
	return &NullableCloudGetConfigurationListResponse{value: val, isSet: true}
}

func (v NullableCloudGetConfigurationListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudGetConfigurationListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


