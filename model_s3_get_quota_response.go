/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3GetQuotaResponse struct for S3GetQuotaResponse
type S3GetQuotaResponse struct {
	UsedSize *int32 `json:"used_size,omitempty"`
}

// NewS3GetQuotaResponse instantiates a new S3GetQuotaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3GetQuotaResponse() *S3GetQuotaResponse {
	this := S3GetQuotaResponse{}
	return &this
}

// NewS3GetQuotaResponseWithDefaults instantiates a new S3GetQuotaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3GetQuotaResponseWithDefaults() *S3GetQuotaResponse {
	this := S3GetQuotaResponse{}
	return &this
}

// GetUsedSize returns the UsedSize field value if set, zero value otherwise.
func (o *S3GetQuotaResponse) GetUsedSize() int32 {
	if o == nil || isNil(o.UsedSize) {
		var ret int32
		return ret
	}
	return *o.UsedSize
}

// GetUsedSizeOk returns a tuple with the UsedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetQuotaResponse) GetUsedSizeOk() (*int32, bool) {
	if o == nil || isNil(o.UsedSize) {
    return nil, false
	}
	return o.UsedSize, true
}

// HasUsedSize returns a boolean if a field has been set.
func (o *S3GetQuotaResponse) HasUsedSize() bool {
	if o != nil && !isNil(o.UsedSize) {
		return true
	}

	return false
}

// SetUsedSize gets a reference to the given int32 and assigns it to the UsedSize field.
func (o *S3GetQuotaResponse) SetUsedSize(v int32) {
	o.UsedSize = &v
}

func (o S3GetQuotaResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UsedSize) {
		toSerialize["used_size"] = o.UsedSize
	}
	return json.Marshal(toSerialize)
}

type NullableS3GetQuotaResponse struct {
	value *S3GetQuotaResponse
	isSet bool
}

func (v NullableS3GetQuotaResponse) Get() *S3GetQuotaResponse {
	return v.value
}

func (v *NullableS3GetQuotaResponse) Set(val *S3GetQuotaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableS3GetQuotaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableS3GetQuotaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3GetQuotaResponse(val *S3GetQuotaResponse) *NullableS3GetQuotaResponse {
	return &NullableS3GetQuotaResponse{value: val, isSet: true}
}

func (v NullableS3GetQuotaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3GetQuotaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


