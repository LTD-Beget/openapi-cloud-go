/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3GetPriceResponseBucket struct for S3GetPriceResponseBucket
type S3GetPriceResponseBucket struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	StorageSize *int32 `json:"storage_size,omitempty"`
	StorageRate *float64 `json:"storage_rate,omitempty"`
	TrafficAmount *int32 `json:"traffic_amount,omitempty"`
	TrafficRate *float64 `json:"traffic_rate,omitempty"`
}

// NewS3GetPriceResponseBucket instantiates a new S3GetPriceResponseBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3GetPriceResponseBucket() *S3GetPriceResponseBucket {
	this := S3GetPriceResponseBucket{}
	return &this
}

// NewS3GetPriceResponseBucketWithDefaults instantiates a new S3GetPriceResponseBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3GetPriceResponseBucketWithDefaults() *S3GetPriceResponseBucket {
	this := S3GetPriceResponseBucket{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *S3GetPriceResponseBucket) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *S3GetPriceResponseBucket) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetStorageSize() int32 {
	if o == nil || isNil(o.StorageSize) {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetStorageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.StorageSize) {
    return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasStorageSize() bool {
	if o != nil && !isNil(o.StorageSize) {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *S3GetPriceResponseBucket) SetStorageSize(v int32) {
	o.StorageSize = &v
}

// GetStorageRate returns the StorageRate field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetStorageRate() float64 {
	if o == nil || isNil(o.StorageRate) {
		var ret float64
		return ret
	}
	return *o.StorageRate
}

// GetStorageRateOk returns a tuple with the StorageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetStorageRateOk() (*float64, bool) {
	if o == nil || isNil(o.StorageRate) {
    return nil, false
	}
	return o.StorageRate, true
}

// HasStorageRate returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasStorageRate() bool {
	if o != nil && !isNil(o.StorageRate) {
		return true
	}

	return false
}

// SetStorageRate gets a reference to the given float64 and assigns it to the StorageRate field.
func (o *S3GetPriceResponseBucket) SetStorageRate(v float64) {
	o.StorageRate = &v
}

// GetTrafficAmount returns the TrafficAmount field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetTrafficAmount() int32 {
	if o == nil || isNil(o.TrafficAmount) {
		var ret int32
		return ret
	}
	return *o.TrafficAmount
}

// GetTrafficAmountOk returns a tuple with the TrafficAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetTrafficAmountOk() (*int32, bool) {
	if o == nil || isNil(o.TrafficAmount) {
    return nil, false
	}
	return o.TrafficAmount, true
}

// HasTrafficAmount returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasTrafficAmount() bool {
	if o != nil && !isNil(o.TrafficAmount) {
		return true
	}

	return false
}

// SetTrafficAmount gets a reference to the given int32 and assigns it to the TrafficAmount field.
func (o *S3GetPriceResponseBucket) SetTrafficAmount(v int32) {
	o.TrafficAmount = &v
}

// GetTrafficRate returns the TrafficRate field value if set, zero value otherwise.
func (o *S3GetPriceResponseBucket) GetTrafficRate() float64 {
	if o == nil || isNil(o.TrafficRate) {
		var ret float64
		return ret
	}
	return *o.TrafficRate
}

// GetTrafficRateOk returns a tuple with the TrafficRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponseBucket) GetTrafficRateOk() (*float64, bool) {
	if o == nil || isNil(o.TrafficRate) {
    return nil, false
	}
	return o.TrafficRate, true
}

// HasTrafficRate returns a boolean if a field has been set.
func (o *S3GetPriceResponseBucket) HasTrafficRate() bool {
	if o != nil && !isNil(o.TrafficRate) {
		return true
	}

	return false
}

// SetTrafficRate gets a reference to the given float64 and assigns it to the TrafficRate field.
func (o *S3GetPriceResponseBucket) SetTrafficRate(v float64) {
	o.TrafficRate = &v
}

func (o S3GetPriceResponseBucket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !isNil(o.StorageSize) {
		toSerialize["storage_size"] = o.StorageSize
	}
	if !isNil(o.StorageRate) {
		toSerialize["storage_rate"] = o.StorageRate
	}
	if !isNil(o.TrafficAmount) {
		toSerialize["traffic_amount"] = o.TrafficAmount
	}
	if !isNil(o.TrafficRate) {
		toSerialize["traffic_rate"] = o.TrafficRate
	}
	return json.Marshal(toSerialize)
}

type NullableS3GetPriceResponseBucket struct {
	value *S3GetPriceResponseBucket
	isSet bool
}

func (v NullableS3GetPriceResponseBucket) Get() *S3GetPriceResponseBucket {
	return v.value
}

func (v *NullableS3GetPriceResponseBucket) Set(val *S3GetPriceResponseBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableS3GetPriceResponseBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableS3GetPriceResponseBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3GetPriceResponseBucket(val *S3GetPriceResponseBucket) *NullableS3GetPriceResponseBucket {
	return &NullableS3GetPriceResponseBucket{value: val, isSet: true}
}

func (v NullableS3GetPriceResponseBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3GetPriceResponseBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


