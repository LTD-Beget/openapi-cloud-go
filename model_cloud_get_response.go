/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// CloudGetResponse struct for CloudGetResponse
type CloudGetResponse struct {
	Service *CloudService `json:"service,omitempty"`
}

// NewCloudGetResponse instantiates a new CloudGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudGetResponse() *CloudGetResponse {
	this := CloudGetResponse{}
	return &this
}

// NewCloudGetResponseWithDefaults instantiates a new CloudGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudGetResponseWithDefaults() *CloudGetResponse {
	this := CloudGetResponse{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CloudGetResponse) GetService() CloudService {
	if o == nil || isNil(o.Service) {
		var ret CloudService
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudGetResponse) GetServiceOk() (*CloudService, bool) {
	if o == nil || isNil(o.Service) {
    return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CloudGetResponse) HasService() bool {
	if o != nil && !isNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given CloudService and assigns it to the Service field.
func (o *CloudGetResponse) SetService(v CloudService) {
	o.Service = &v
}

func (o CloudGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	return json.Marshal(toSerialize)
}

type NullableCloudGetResponse struct {
	value *CloudGetResponse
	isSet bool
}

func (v NullableCloudGetResponse) Get() *CloudGetResponse {
	return v.value
}

func (v *NullableCloudGetResponse) Set(val *CloudGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudGetResponse(val *CloudGetResponse) *NullableCloudGetResponse {
	return &NullableCloudGetResponse{value: val, isSet: true}
}

func (v NullableCloudGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


