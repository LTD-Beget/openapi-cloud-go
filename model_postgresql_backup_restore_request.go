/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlBackupRestoreRequest struct for PostgresqlBackupRestoreRequest
type PostgresqlBackupRestoreRequest struct {
	CopyId *string `json:"copy_id,omitempty"`
	ServiceUuid *string `json:"service_uuid,omitempty"`
}

// NewPostgresqlBackupRestoreRequest instantiates a new PostgresqlBackupRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlBackupRestoreRequest() *PostgresqlBackupRestoreRequest {
	this := PostgresqlBackupRestoreRequest{}
	return &this
}

// NewPostgresqlBackupRestoreRequestWithDefaults instantiates a new PostgresqlBackupRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlBackupRestoreRequestWithDefaults() *PostgresqlBackupRestoreRequest {
	this := PostgresqlBackupRestoreRequest{}
	return &this
}

// GetCopyId returns the CopyId field value if set, zero value otherwise.
func (o *PostgresqlBackupRestoreRequest) GetCopyId() string {
	if o == nil || isNil(o.CopyId) {
		var ret string
		return ret
	}
	return *o.CopyId
}

// GetCopyIdOk returns a tuple with the CopyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlBackupRestoreRequest) GetCopyIdOk() (*string, bool) {
	if o == nil || isNil(o.CopyId) {
    return nil, false
	}
	return o.CopyId, true
}

// HasCopyId returns a boolean if a field has been set.
func (o *PostgresqlBackupRestoreRequest) HasCopyId() bool {
	if o != nil && !isNil(o.CopyId) {
		return true
	}

	return false
}

// SetCopyId gets a reference to the given string and assigns it to the CopyId field.
func (o *PostgresqlBackupRestoreRequest) SetCopyId(v string) {
	o.CopyId = &v
}

// GetServiceUuid returns the ServiceUuid field value if set, zero value otherwise.
func (o *PostgresqlBackupRestoreRequest) GetServiceUuid() string {
	if o == nil || isNil(o.ServiceUuid) {
		var ret string
		return ret
	}
	return *o.ServiceUuid
}

// GetServiceUuidOk returns a tuple with the ServiceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlBackupRestoreRequest) GetServiceUuidOk() (*string, bool) {
	if o == nil || isNil(o.ServiceUuid) {
    return nil, false
	}
	return o.ServiceUuid, true
}

// HasServiceUuid returns a boolean if a field has been set.
func (o *PostgresqlBackupRestoreRequest) HasServiceUuid() bool {
	if o != nil && !isNil(o.ServiceUuid) {
		return true
	}

	return false
}

// SetServiceUuid gets a reference to the given string and assigns it to the ServiceUuid field.
func (o *PostgresqlBackupRestoreRequest) SetServiceUuid(v string) {
	o.ServiceUuid = &v
}

func (o PostgresqlBackupRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CopyId) {
		toSerialize["copy_id"] = o.CopyId
	}
	if !isNil(o.ServiceUuid) {
		toSerialize["service_uuid"] = o.ServiceUuid
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlBackupRestoreRequest struct {
	value *PostgresqlBackupRestoreRequest
	isSet bool
}

func (v NullablePostgresqlBackupRestoreRequest) Get() *PostgresqlBackupRestoreRequest {
	return v.value
}

func (v *NullablePostgresqlBackupRestoreRequest) Set(val *PostgresqlBackupRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlBackupRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlBackupRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlBackupRestoreRequest(val *PostgresqlBackupRestoreRequest) *NullablePostgresqlBackupRestoreRequest {
	return &NullablePostgresqlBackupRestoreRequest{value: val, isSet: true}
}

func (v NullablePostgresqlBackupRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlBackupRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


