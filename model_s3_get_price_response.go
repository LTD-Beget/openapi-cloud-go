/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3GetPriceResponse struct for S3GetPriceResponse
type S3GetPriceResponse struct {
	Bucket []S3GetPriceResponseBucket `json:"bucket,omitempty"`
}

// NewS3GetPriceResponse instantiates a new S3GetPriceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3GetPriceResponse() *S3GetPriceResponse {
	this := S3GetPriceResponse{}
	return &this
}

// NewS3GetPriceResponseWithDefaults instantiates a new S3GetPriceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3GetPriceResponseWithDefaults() *S3GetPriceResponse {
	this := S3GetPriceResponse{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *S3GetPriceResponse) GetBucket() []S3GetPriceResponseBucket {
	if o == nil || isNil(o.Bucket) {
		var ret []S3GetPriceResponseBucket
		return ret
	}
	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3GetPriceResponse) GetBucketOk() ([]S3GetPriceResponseBucket, bool) {
	if o == nil || isNil(o.Bucket) {
    return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *S3GetPriceResponse) HasBucket() bool {
	if o != nil && !isNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given []S3GetPriceResponseBucket and assigns it to the Bucket field.
func (o *S3GetPriceResponse) SetBucket(v []S3GetPriceResponseBucket) {
	o.Bucket = v
}

func (o S3GetPriceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	return json.Marshal(toSerialize)
}

type NullableS3GetPriceResponse struct {
	value *S3GetPriceResponse
	isSet bool
}

func (v NullableS3GetPriceResponse) Get() *S3GetPriceResponse {
	return v.value
}

func (v *NullableS3GetPriceResponse) Set(val *S3GetPriceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableS3GetPriceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableS3GetPriceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3GetPriceResponse(val *S3GetPriceResponse) *NullableS3GetPriceResponse {
	return &NullableS3GetPriceResponse{value: val, isSet: true}
}

func (v NullableS3GetPriceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3GetPriceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


