/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// StructuresParamConfig struct for StructuresParamConfig
type StructuresParamConfig struct {
	Name *string `json:"name,omitempty"`
	DocumentationLink *string `json:"documentation_link,omitempty"`
	IntegerValue map[string]interface{} `json:"integer_value,omitempty"`
	FloatValue map[string]interface{} `json:"float_value,omitempty"`
	StringValue map[string]interface{} `json:"string_value,omitempty"`
	EnumValue *StructuresParamConfigEnumValue `json:"enum_value,omitempty"`
	SetValue *StructuresParamConfigSetValue `json:"set_value,omitempty"`
}

// NewStructuresParamConfig instantiates a new StructuresParamConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresParamConfig() *StructuresParamConfig {
	this := StructuresParamConfig{}
	return &this
}

// NewStructuresParamConfigWithDefaults instantiates a new StructuresParamConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresParamConfigWithDefaults() *StructuresParamConfig {
	this := StructuresParamConfig{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StructuresParamConfig) SetName(v string) {
	o.Name = &v
}

// GetDocumentationLink returns the DocumentationLink field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetDocumentationLink() string {
	if o == nil || isNil(o.DocumentationLink) {
		var ret string
		return ret
	}
	return *o.DocumentationLink
}

// GetDocumentationLinkOk returns a tuple with the DocumentationLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetDocumentationLinkOk() (*string, bool) {
	if o == nil || isNil(o.DocumentationLink) {
    return nil, false
	}
	return o.DocumentationLink, true
}

// HasDocumentationLink returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasDocumentationLink() bool {
	if o != nil && !isNil(o.DocumentationLink) {
		return true
	}

	return false
}

// SetDocumentationLink gets a reference to the given string and assigns it to the DocumentationLink field.
func (o *StructuresParamConfig) SetDocumentationLink(v string) {
	o.DocumentationLink = &v
}

// GetIntegerValue returns the IntegerValue field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetIntegerValue() map[string]interface{} {
	if o == nil || isNil(o.IntegerValue) {
		var ret map[string]interface{}
		return ret
	}
	return o.IntegerValue
}

// GetIntegerValueOk returns a tuple with the IntegerValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetIntegerValueOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.IntegerValue) {
    return map[string]interface{}{}, false
	}
	return o.IntegerValue, true
}

// HasIntegerValue returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasIntegerValue() bool {
	if o != nil && !isNil(o.IntegerValue) {
		return true
	}

	return false
}

// SetIntegerValue gets a reference to the given map[string]interface{} and assigns it to the IntegerValue field.
func (o *StructuresParamConfig) SetIntegerValue(v map[string]interface{}) {
	o.IntegerValue = v
}

// GetFloatValue returns the FloatValue field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetFloatValue() map[string]interface{} {
	if o == nil || isNil(o.FloatValue) {
		var ret map[string]interface{}
		return ret
	}
	return o.FloatValue
}

// GetFloatValueOk returns a tuple with the FloatValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetFloatValueOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FloatValue) {
    return map[string]interface{}{}, false
	}
	return o.FloatValue, true
}

// HasFloatValue returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasFloatValue() bool {
	if o != nil && !isNil(o.FloatValue) {
		return true
	}

	return false
}

// SetFloatValue gets a reference to the given map[string]interface{} and assigns it to the FloatValue field.
func (o *StructuresParamConfig) SetFloatValue(v map[string]interface{}) {
	o.FloatValue = v
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetStringValue() map[string]interface{} {
	if o == nil || isNil(o.StringValue) {
		var ret map[string]interface{}
		return ret
	}
	return o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetStringValueOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.StringValue) {
    return map[string]interface{}{}, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasStringValue() bool {
	if o != nil && !isNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given map[string]interface{} and assigns it to the StringValue field.
func (o *StructuresParamConfig) SetStringValue(v map[string]interface{}) {
	o.StringValue = v
}

// GetEnumValue returns the EnumValue field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetEnumValue() StructuresParamConfigEnumValue {
	if o == nil || isNil(o.EnumValue) {
		var ret StructuresParamConfigEnumValue
		return ret
	}
	return *o.EnumValue
}

// GetEnumValueOk returns a tuple with the EnumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetEnumValueOk() (*StructuresParamConfigEnumValue, bool) {
	if o == nil || isNil(o.EnumValue) {
    return nil, false
	}
	return o.EnumValue, true
}

// HasEnumValue returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasEnumValue() bool {
	if o != nil && !isNil(o.EnumValue) {
		return true
	}

	return false
}

// SetEnumValue gets a reference to the given StructuresParamConfigEnumValue and assigns it to the EnumValue field.
func (o *StructuresParamConfig) SetEnumValue(v StructuresParamConfigEnumValue) {
	o.EnumValue = &v
}

// GetSetValue returns the SetValue field value if set, zero value otherwise.
func (o *StructuresParamConfig) GetSetValue() StructuresParamConfigSetValue {
	if o == nil || isNil(o.SetValue) {
		var ret StructuresParamConfigSetValue
		return ret
	}
	return *o.SetValue
}

// GetSetValueOk returns a tuple with the SetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresParamConfig) GetSetValueOk() (*StructuresParamConfigSetValue, bool) {
	if o == nil || isNil(o.SetValue) {
    return nil, false
	}
	return o.SetValue, true
}

// HasSetValue returns a boolean if a field has been set.
func (o *StructuresParamConfig) HasSetValue() bool {
	if o != nil && !isNil(o.SetValue) {
		return true
	}

	return false
}

// SetSetValue gets a reference to the given StructuresParamConfigSetValue and assigns it to the SetValue field.
func (o *StructuresParamConfig) SetSetValue(v StructuresParamConfigSetValue) {
	o.SetValue = &v
}

func (o StructuresParamConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DocumentationLink) {
		toSerialize["documentation_link"] = o.DocumentationLink
	}
	if !isNil(o.IntegerValue) {
		toSerialize["integer_value"] = o.IntegerValue
	}
	if !isNil(o.FloatValue) {
		toSerialize["float_value"] = o.FloatValue
	}
	if !isNil(o.StringValue) {
		toSerialize["string_value"] = o.StringValue
	}
	if !isNil(o.EnumValue) {
		toSerialize["enum_value"] = o.EnumValue
	}
	if !isNil(o.SetValue) {
		toSerialize["set_value"] = o.SetValue
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresParamConfig struct {
	value *StructuresParamConfig
	isSet bool
}

func (v NullableStructuresParamConfig) Get() *StructuresParamConfig {
	return v.value
}

func (v *NullableStructuresParamConfig) Set(val *StructuresParamConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresParamConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresParamConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresParamConfig(val *StructuresParamConfig) *NullableStructuresParamConfig {
	return &NullableStructuresParamConfig{value: val, isSet: true}
}

func (v NullableStructuresParamConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresParamConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


