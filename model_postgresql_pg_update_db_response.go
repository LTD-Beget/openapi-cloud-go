/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPgUpdateDbResponse struct for PostgresqlPgUpdateDbResponse
type PostgresqlPgUpdateDbResponse struct {
	Db *PostgresqlPgDb `json:"db,omitempty"`
	Error *PostgresqlPgUpdateDbResponseError `json:"error,omitempty"`
}

// NewPostgresqlPgUpdateDbResponse instantiates a new PostgresqlPgUpdateDbResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPgUpdateDbResponse() *PostgresqlPgUpdateDbResponse {
	this := PostgresqlPgUpdateDbResponse{}
	return &this
}

// NewPostgresqlPgUpdateDbResponseWithDefaults instantiates a new PostgresqlPgUpdateDbResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPgUpdateDbResponseWithDefaults() *PostgresqlPgUpdateDbResponse {
	this := PostgresqlPgUpdateDbResponse{}
	return &this
}

// GetDb returns the Db field value if set, zero value otherwise.
func (o *PostgresqlPgUpdateDbResponse) GetDb() PostgresqlPgDb {
	if o == nil || isNil(o.Db) {
		var ret PostgresqlPgDb
		return ret
	}
	return *o.Db
}

// GetDbOk returns a tuple with the Db field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgUpdateDbResponse) GetDbOk() (*PostgresqlPgDb, bool) {
	if o == nil || isNil(o.Db) {
    return nil, false
	}
	return o.Db, true
}

// HasDb returns a boolean if a field has been set.
func (o *PostgresqlPgUpdateDbResponse) HasDb() bool {
	if o != nil && !isNil(o.Db) {
		return true
	}

	return false
}

// SetDb gets a reference to the given PostgresqlPgDb and assigns it to the Db field.
func (o *PostgresqlPgUpdateDbResponse) SetDb(v PostgresqlPgDb) {
	o.Db = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PostgresqlPgUpdateDbResponse) GetError() PostgresqlPgUpdateDbResponseError {
	if o == nil || isNil(o.Error) {
		var ret PostgresqlPgUpdateDbResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgUpdateDbResponse) GetErrorOk() (*PostgresqlPgUpdateDbResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PostgresqlPgUpdateDbResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given PostgresqlPgUpdateDbResponseError and assigns it to the Error field.
func (o *PostgresqlPgUpdateDbResponse) SetError(v PostgresqlPgUpdateDbResponseError) {
	o.Error = &v
}

func (o PostgresqlPgUpdateDbResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Db) {
		toSerialize["db"] = o.Db
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPgUpdateDbResponse struct {
	value *PostgresqlPgUpdateDbResponse
	isSet bool
}

func (v NullablePostgresqlPgUpdateDbResponse) Get() *PostgresqlPgUpdateDbResponse {
	return v.value
}

func (v *NullablePostgresqlPgUpdateDbResponse) Set(val *PostgresqlPgUpdateDbResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPgUpdateDbResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPgUpdateDbResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPgUpdateDbResponse(val *PostgresqlPgUpdateDbResponse) *NullablePostgresqlPgUpdateDbResponse {
	return &NullablePostgresqlPgUpdateDbResponse{value: val, isSet: true}
}

func (v NullablePostgresqlPgUpdateDbResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPgUpdateDbResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


