/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// StructuresStatisticSeriesData struct for StructuresStatisticSeriesData
type StructuresStatisticSeriesData struct {
	Date []string `json:"date,omitempty"`
	Value []float64 `json:"value,omitempty"`
}

// NewStructuresStatisticSeriesData instantiates a new StructuresStatisticSeriesData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresStatisticSeriesData() *StructuresStatisticSeriesData {
	this := StructuresStatisticSeriesData{}
	return &this
}

// NewStructuresStatisticSeriesDataWithDefaults instantiates a new StructuresStatisticSeriesData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresStatisticSeriesDataWithDefaults() *StructuresStatisticSeriesData {
	this := StructuresStatisticSeriesData{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *StructuresStatisticSeriesData) GetDate() []string {
	if o == nil || isNil(o.Date) {
		var ret []string
		return ret
	}
	return o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresStatisticSeriesData) GetDateOk() ([]string, bool) {
	if o == nil || isNil(o.Date) {
    return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *StructuresStatisticSeriesData) HasDate() bool {
	if o != nil && !isNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given []string and assigns it to the Date field.
func (o *StructuresStatisticSeriesData) SetDate(v []string) {
	o.Date = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *StructuresStatisticSeriesData) GetValue() []float64 {
	if o == nil || isNil(o.Value) {
		var ret []float64
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresStatisticSeriesData) GetValueOk() ([]float64, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *StructuresStatisticSeriesData) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []float64 and assigns it to the Value field.
func (o *StructuresStatisticSeriesData) SetValue(v []float64) {
	o.Value = v
}

func (o StructuresStatisticSeriesData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresStatisticSeriesData struct {
	value *StructuresStatisticSeriesData
	isSet bool
}

func (v NullableStructuresStatisticSeriesData) Get() *StructuresStatisticSeriesData {
	return v.value
}

func (v *NullableStructuresStatisticSeriesData) Set(val *StructuresStatisticSeriesData) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresStatisticSeriesData) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresStatisticSeriesData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresStatisticSeriesData(val *StructuresStatisticSeriesData) *NullableStructuresStatisticSeriesData {
	return &NullableStructuresStatisticSeriesData{value: val, isSet: true}
}

func (v NullableStructuresStatisticSeriesData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresStatisticSeriesData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


