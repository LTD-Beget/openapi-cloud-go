/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// StructuresAddressInfoPublicAddress struct for StructuresAddressInfoPublicAddress
type StructuresAddressInfoPublicAddress struct {
	Ip *string `json:"ip,omitempty"`
}

// NewStructuresAddressInfoPublicAddress instantiates a new StructuresAddressInfoPublicAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresAddressInfoPublicAddress() *StructuresAddressInfoPublicAddress {
	this := StructuresAddressInfoPublicAddress{}
	return &this
}

// NewStructuresAddressInfoPublicAddressWithDefaults instantiates a new StructuresAddressInfoPublicAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresAddressInfoPublicAddressWithDefaults() *StructuresAddressInfoPublicAddress {
	this := StructuresAddressInfoPublicAddress{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *StructuresAddressInfoPublicAddress) GetIp() string {
	if o == nil || isNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresAddressInfoPublicAddress) GetIpOk() (*string, bool) {
	if o == nil || isNil(o.Ip) {
    return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *StructuresAddressInfoPublicAddress) HasIp() bool {
	if o != nil && !isNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *StructuresAddressInfoPublicAddress) SetIp(v string) {
	o.Ip = &v
}

func (o StructuresAddressInfoPublicAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresAddressInfoPublicAddress struct {
	value *StructuresAddressInfoPublicAddress
	isSet bool
}

func (v NullableStructuresAddressInfoPublicAddress) Get() *StructuresAddressInfoPublicAddress {
	return v.value
}

func (v *NullableStructuresAddressInfoPublicAddress) Set(val *StructuresAddressInfoPublicAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresAddressInfoPublicAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresAddressInfoPublicAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresAddressInfoPublicAddress(val *StructuresAddressInfoPublicAddress) *NullableStructuresAddressInfoPublicAddress {
	return &NullableStructuresAddressInfoPublicAddress{value: val, isSet: true}
}

func (v NullableStructuresAddressInfoPublicAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresAddressInfoPublicAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


