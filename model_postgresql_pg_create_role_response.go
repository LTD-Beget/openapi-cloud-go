/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPgCreateRoleResponse struct for PostgresqlPgCreateRoleResponse
type PostgresqlPgCreateRoleResponse struct {
	Role *PostgresqlRole `json:"role,omitempty"`
	Error *PostgresqlPgCreateRoleResponseError `json:"error,omitempty"`
}

// NewPostgresqlPgCreateRoleResponse instantiates a new PostgresqlPgCreateRoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPgCreateRoleResponse() *PostgresqlPgCreateRoleResponse {
	this := PostgresqlPgCreateRoleResponse{}
	return &this
}

// NewPostgresqlPgCreateRoleResponseWithDefaults instantiates a new PostgresqlPgCreateRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPgCreateRoleResponseWithDefaults() *PostgresqlPgCreateRoleResponse {
	this := PostgresqlPgCreateRoleResponse{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleResponse) GetRole() PostgresqlRole {
	if o == nil || isNil(o.Role) {
		var ret PostgresqlRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleResponse) GetRoleOk() (*PostgresqlRole, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleResponse) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given PostgresqlRole and assigns it to the Role field.
func (o *PostgresqlPgCreateRoleResponse) SetRole(v PostgresqlRole) {
	o.Role = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleResponse) GetError() PostgresqlPgCreateRoleResponseError {
	if o == nil || isNil(o.Error) {
		var ret PostgresqlPgCreateRoleResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleResponse) GetErrorOk() (*PostgresqlPgCreateRoleResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given PostgresqlPgCreateRoleResponseError and assigns it to the Error field.
func (o *PostgresqlPgCreateRoleResponse) SetError(v PostgresqlPgCreateRoleResponseError) {
	o.Error = &v
}

func (o PostgresqlPgCreateRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPgCreateRoleResponse struct {
	value *PostgresqlPgCreateRoleResponse
	isSet bool
}

func (v NullablePostgresqlPgCreateRoleResponse) Get() *PostgresqlPgCreateRoleResponse {
	return v.value
}

func (v *NullablePostgresqlPgCreateRoleResponse) Set(val *PostgresqlPgCreateRoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPgCreateRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPgCreateRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPgCreateRoleResponse(val *PostgresqlPgCreateRoleResponse) *NullablePostgresqlPgCreateRoleResponse {
	return &NullablePostgresqlPgCreateRoleResponse{value: val, isSet: true}
}

func (v NullablePostgresqlPgCreateRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPgCreateRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


