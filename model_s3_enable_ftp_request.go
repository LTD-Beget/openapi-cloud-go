/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3EnableFtpRequest struct for S3EnableFtpRequest
type S3EnableFtpRequest struct {
	ServiceId *string `json:"service_id,omitempty"`
	Enable *bool `json:"enable,omitempty"`
}

// NewS3EnableFtpRequest instantiates a new S3EnableFtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3EnableFtpRequest() *S3EnableFtpRequest {
	this := S3EnableFtpRequest{}
	return &this
}

// NewS3EnableFtpRequestWithDefaults instantiates a new S3EnableFtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3EnableFtpRequestWithDefaults() *S3EnableFtpRequest {
	this := S3EnableFtpRequest{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *S3EnableFtpRequest) GetServiceId() string {
	if o == nil || isNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3EnableFtpRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || isNil(o.ServiceId) {
    return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *S3EnableFtpRequest) HasServiceId() bool {
	if o != nil && !isNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *S3EnableFtpRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *S3EnableFtpRequest) GetEnable() bool {
	if o == nil || isNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3EnableFtpRequest) GetEnableOk() (*bool, bool) {
	if o == nil || isNil(o.Enable) {
    return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *S3EnableFtpRequest) HasEnable() bool {
	if o != nil && !isNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *S3EnableFtpRequest) SetEnable(v bool) {
	o.Enable = &v
}

func (o S3EnableFtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !isNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableS3EnableFtpRequest struct {
	value *S3EnableFtpRequest
	isSet bool
}

func (v NullableS3EnableFtpRequest) Get() *S3EnableFtpRequest {
	return v.value
}

func (v *NullableS3EnableFtpRequest) Set(val *S3EnableFtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableS3EnableFtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableS3EnableFtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3EnableFtpRequest(val *S3EnableFtpRequest) *NullableS3EnableFtpRequest {
	return &NullableS3EnableFtpRequest{value: val, isSet: true}
}

func (v NullableS3EnableFtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3EnableFtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


