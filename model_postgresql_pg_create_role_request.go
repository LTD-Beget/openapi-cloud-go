/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPgCreateRoleRequest struct for PostgresqlPgCreateRoleRequest
type PostgresqlPgCreateRoleRequest struct {
	ServiceId *string `json:"service_id,omitempty"`
	RoleName *string `json:"role_name,omitempty"`
	Password *string `json:"password,omitempty"`
	ParentRole []string `json:"parent_role,omitempty"`
}

// NewPostgresqlPgCreateRoleRequest instantiates a new PostgresqlPgCreateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPgCreateRoleRequest() *PostgresqlPgCreateRoleRequest {
	this := PostgresqlPgCreateRoleRequest{}
	return &this
}

// NewPostgresqlPgCreateRoleRequestWithDefaults instantiates a new PostgresqlPgCreateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPgCreateRoleRequestWithDefaults() *PostgresqlPgCreateRoleRequest {
	this := PostgresqlPgCreateRoleRequest{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleRequest) GetServiceId() string {
	if o == nil || isNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || isNil(o.ServiceId) {
    return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleRequest) HasServiceId() bool {
	if o != nil && !isNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *PostgresqlPgCreateRoleRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleRequest) GetRoleName() string {
	if o == nil || isNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleRequest) GetRoleNameOk() (*string, bool) {
	if o == nil || isNil(o.RoleName) {
    return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleRequest) HasRoleName() bool {
	if o != nil && !isNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *PostgresqlPgCreateRoleRequest) SetRoleName(v string) {
	o.RoleName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PostgresqlPgCreateRoleRequest) SetPassword(v string) {
	o.Password = &v
}

// GetParentRole returns the ParentRole field value if set, zero value otherwise.
func (o *PostgresqlPgCreateRoleRequest) GetParentRole() []string {
	if o == nil || isNil(o.ParentRole) {
		var ret []string
		return ret
	}
	return o.ParentRole
}

// GetParentRoleOk returns a tuple with the ParentRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgCreateRoleRequest) GetParentRoleOk() ([]string, bool) {
	if o == nil || isNil(o.ParentRole) {
    return nil, false
	}
	return o.ParentRole, true
}

// HasParentRole returns a boolean if a field has been set.
func (o *PostgresqlPgCreateRoleRequest) HasParentRole() bool {
	if o != nil && !isNil(o.ParentRole) {
		return true
	}

	return false
}

// SetParentRole gets a reference to the given []string and assigns it to the ParentRole field.
func (o *PostgresqlPgCreateRoleRequest) SetParentRole(v []string) {
	o.ParentRole = v
}

func (o PostgresqlPgCreateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !isNil(o.RoleName) {
		toSerialize["role_name"] = o.RoleName
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.ParentRole) {
		toSerialize["parent_role"] = o.ParentRole
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPgCreateRoleRequest struct {
	value *PostgresqlPgCreateRoleRequest
	isSet bool
}

func (v NullablePostgresqlPgCreateRoleRequest) Get() *PostgresqlPgCreateRoleRequest {
	return v.value
}

func (v *NullablePostgresqlPgCreateRoleRequest) Set(val *PostgresqlPgCreateRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPgCreateRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPgCreateRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPgCreateRoleRequest(val *PostgresqlPgCreateRoleRequest) *NullablePostgresqlPgCreateRoleRequest {
	return &NullablePostgresqlPgCreateRoleRequest{value: val, isSet: true}
}

func (v NullablePostgresqlPgCreateRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPgCreateRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


