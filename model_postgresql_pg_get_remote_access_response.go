/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPgGetRemoteAccessResponse struct for PostgresqlPgGetRemoteAccessResponse
type PostgresqlPgGetRemoteAccessResponse struct {
	State *PostgresqlPgRemoteAccessState `json:"state,omitempty"`
}

// NewPostgresqlPgGetRemoteAccessResponse instantiates a new PostgresqlPgGetRemoteAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPgGetRemoteAccessResponse() *PostgresqlPgGetRemoteAccessResponse {
	this := PostgresqlPgGetRemoteAccessResponse{}
	return &this
}

// NewPostgresqlPgGetRemoteAccessResponseWithDefaults instantiates a new PostgresqlPgGetRemoteAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPgGetRemoteAccessResponseWithDefaults() *PostgresqlPgGetRemoteAccessResponse {
	this := PostgresqlPgGetRemoteAccessResponse{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PostgresqlPgGetRemoteAccessResponse) GetState() PostgresqlPgRemoteAccessState {
	if o == nil || isNil(o.State) {
		var ret PostgresqlPgRemoteAccessState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPgGetRemoteAccessResponse) GetStateOk() (*PostgresqlPgRemoteAccessState, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PostgresqlPgGetRemoteAccessResponse) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given PostgresqlPgRemoteAccessState and assigns it to the State field.
func (o *PostgresqlPgGetRemoteAccessResponse) SetState(v PostgresqlPgRemoteAccessState) {
	o.State = &v
}

func (o PostgresqlPgGetRemoteAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPgGetRemoteAccessResponse struct {
	value *PostgresqlPgGetRemoteAccessResponse
	isSet bool
}

func (v NullablePostgresqlPgGetRemoteAccessResponse) Get() *PostgresqlPgGetRemoteAccessResponse {
	return v.value
}

func (v *NullablePostgresqlPgGetRemoteAccessResponse) Set(val *PostgresqlPgGetRemoteAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPgGetRemoteAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPgGetRemoteAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPgGetRemoteAccessResponse(val *PostgresqlPgGetRemoteAccessResponse) *NullablePostgresqlPgGetRemoteAccessResponse {
	return &NullablePostgresqlPgGetRemoteAccessResponse{value: val, isSet: true}
}

func (v NullablePostgresqlPgGetRemoteAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPgGetRemoteAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


