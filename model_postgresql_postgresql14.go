/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// PostgresqlPostgresql14 struct for PostgresqlPostgresql14
type PostgresqlPostgresql14 struct {
	Configuration *PostgresqlPostgresql14Configuration `json:"configuration,omitempty"`
	Host *string `json:"host,omitempty"`
	Port *int32 `json:"port,omitempty"`
	AddressInfo *StructuresAddressInfo `json:"address_info,omitempty"`
	WebuiUrl *string `json:"webui_url,omitempty"`
	DiskUsed *string `json:"disk_used,omitempty"`
	DiskLeft *string `json:"disk_left,omitempty"`
	ReadOnly *bool `json:"read_only,omitempty"`
	WebuiInstalling *bool `json:"webui_installing,omitempty"`
}

// NewPostgresqlPostgresql14 instantiates a new PostgresqlPostgresql14 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlPostgresql14() *PostgresqlPostgresql14 {
	this := PostgresqlPostgresql14{}
	return &this
}

// NewPostgresqlPostgresql14WithDefaults instantiates a new PostgresqlPostgresql14 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlPostgresql14WithDefaults() *PostgresqlPostgresql14 {
	this := PostgresqlPostgresql14{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetConfiguration() PostgresqlPostgresql14Configuration {
	if o == nil || isNil(o.Configuration) {
		var ret PostgresqlPostgresql14Configuration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetConfigurationOk() (*PostgresqlPostgresql14Configuration, bool) {
	if o == nil || isNil(o.Configuration) {
    return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasConfiguration() bool {
	if o != nil && !isNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given PostgresqlPostgresql14Configuration and assigns it to the Configuration field.
func (o *PostgresqlPostgresql14) SetConfiguration(v PostgresqlPostgresql14Configuration) {
	o.Configuration = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
    return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *PostgresqlPostgresql14) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *PostgresqlPostgresql14) SetPort(v int32) {
	o.Port = &v
}

// GetAddressInfo returns the AddressInfo field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetAddressInfo() StructuresAddressInfo {
	if o == nil || isNil(o.AddressInfo) {
		var ret StructuresAddressInfo
		return ret
	}
	return *o.AddressInfo
}

// GetAddressInfoOk returns a tuple with the AddressInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetAddressInfoOk() (*StructuresAddressInfo, bool) {
	if o == nil || isNil(o.AddressInfo) {
    return nil, false
	}
	return o.AddressInfo, true
}

// HasAddressInfo returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasAddressInfo() bool {
	if o != nil && !isNil(o.AddressInfo) {
		return true
	}

	return false
}

// SetAddressInfo gets a reference to the given StructuresAddressInfo and assigns it to the AddressInfo field.
func (o *PostgresqlPostgresql14) SetAddressInfo(v StructuresAddressInfo) {
	o.AddressInfo = &v
}

// GetWebuiUrl returns the WebuiUrl field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetWebuiUrl() string {
	if o == nil || isNil(o.WebuiUrl) {
		var ret string
		return ret
	}
	return *o.WebuiUrl
}

// GetWebuiUrlOk returns a tuple with the WebuiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetWebuiUrlOk() (*string, bool) {
	if o == nil || isNil(o.WebuiUrl) {
    return nil, false
	}
	return o.WebuiUrl, true
}

// HasWebuiUrl returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasWebuiUrl() bool {
	if o != nil && !isNil(o.WebuiUrl) {
		return true
	}

	return false
}

// SetWebuiUrl gets a reference to the given string and assigns it to the WebuiUrl field.
func (o *PostgresqlPostgresql14) SetWebuiUrl(v string) {
	o.WebuiUrl = &v
}

// GetDiskUsed returns the DiskUsed field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetDiskUsed() string {
	if o == nil || isNil(o.DiskUsed) {
		var ret string
		return ret
	}
	return *o.DiskUsed
}

// GetDiskUsedOk returns a tuple with the DiskUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetDiskUsedOk() (*string, bool) {
	if o == nil || isNil(o.DiskUsed) {
    return nil, false
	}
	return o.DiskUsed, true
}

// HasDiskUsed returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasDiskUsed() bool {
	if o != nil && !isNil(o.DiskUsed) {
		return true
	}

	return false
}

// SetDiskUsed gets a reference to the given string and assigns it to the DiskUsed field.
func (o *PostgresqlPostgresql14) SetDiskUsed(v string) {
	o.DiskUsed = &v
}

// GetDiskLeft returns the DiskLeft field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetDiskLeft() string {
	if o == nil || isNil(o.DiskLeft) {
		var ret string
		return ret
	}
	return *o.DiskLeft
}

// GetDiskLeftOk returns a tuple with the DiskLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetDiskLeftOk() (*string, bool) {
	if o == nil || isNil(o.DiskLeft) {
    return nil, false
	}
	return o.DiskLeft, true
}

// HasDiskLeft returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasDiskLeft() bool {
	if o != nil && !isNil(o.DiskLeft) {
		return true
	}

	return false
}

// SetDiskLeft gets a reference to the given string and assigns it to the DiskLeft field.
func (o *PostgresqlPostgresql14) SetDiskLeft(v string) {
	o.DiskLeft = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetReadOnly() bool {
	if o == nil || isNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetReadOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.ReadOnly) {
    return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasReadOnly() bool {
	if o != nil && !isNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *PostgresqlPostgresql14) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetWebuiInstalling returns the WebuiInstalling field value if set, zero value otherwise.
func (o *PostgresqlPostgresql14) GetWebuiInstalling() bool {
	if o == nil || isNil(o.WebuiInstalling) {
		var ret bool
		return ret
	}
	return *o.WebuiInstalling
}

// GetWebuiInstallingOk returns a tuple with the WebuiInstalling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlPostgresql14) GetWebuiInstallingOk() (*bool, bool) {
	if o == nil || isNil(o.WebuiInstalling) {
    return nil, false
	}
	return o.WebuiInstalling, true
}

// HasWebuiInstalling returns a boolean if a field has been set.
func (o *PostgresqlPostgresql14) HasWebuiInstalling() bool {
	if o != nil && !isNil(o.WebuiInstalling) {
		return true
	}

	return false
}

// SetWebuiInstalling gets a reference to the given bool and assigns it to the WebuiInstalling field.
func (o *PostgresqlPostgresql14) SetWebuiInstalling(v bool) {
	o.WebuiInstalling = &v
}

func (o PostgresqlPostgresql14) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.AddressInfo) {
		toSerialize["address_info"] = o.AddressInfo
	}
	if !isNil(o.WebuiUrl) {
		toSerialize["webui_url"] = o.WebuiUrl
	}
	if !isNil(o.DiskUsed) {
		toSerialize["disk_used"] = o.DiskUsed
	}
	if !isNil(o.DiskLeft) {
		toSerialize["disk_left"] = o.DiskLeft
	}
	if !isNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	if !isNil(o.WebuiInstalling) {
		toSerialize["webui_installing"] = o.WebuiInstalling
	}
	return json.Marshal(toSerialize)
}

type NullablePostgresqlPostgresql14 struct {
	value *PostgresqlPostgresql14
	isSet bool
}

func (v NullablePostgresqlPostgresql14) Get() *PostgresqlPostgresql14 {
	return v.value
}

func (v *NullablePostgresqlPostgresql14) Set(val *PostgresqlPostgresql14) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlPostgresql14) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlPostgresql14) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlPostgresql14(val *PostgresqlPostgresql14) *NullablePostgresqlPostgresql14 {
	return &NullablePostgresqlPostgresql14{value: val, isSet: true}
}

func (v NullablePostgresqlPostgresql14) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlPostgresql14) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


