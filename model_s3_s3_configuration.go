/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3S3Configuration struct for S3S3Configuration
type S3S3Configuration struct {
	FreeTrafficAmount *int32 `json:"free_traffic_amount,omitempty"`
	TrafficPriceDay *float64 `json:"traffic_price_day,omitempty"`
	TrafficPriceMonth *float64 `json:"traffic_price_month,omitempty"`
}

// NewS3S3Configuration instantiates a new S3S3Configuration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3S3Configuration() *S3S3Configuration {
	this := S3S3Configuration{}
	return &this
}

// NewS3S3ConfigurationWithDefaults instantiates a new S3S3Configuration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3S3ConfigurationWithDefaults() *S3S3Configuration {
	this := S3S3Configuration{}
	return &this
}

// GetFreeTrafficAmount returns the FreeTrafficAmount field value if set, zero value otherwise.
func (o *S3S3Configuration) GetFreeTrafficAmount() int32 {
	if o == nil || isNil(o.FreeTrafficAmount) {
		var ret int32
		return ret
	}
	return *o.FreeTrafficAmount
}

// GetFreeTrafficAmountOk returns a tuple with the FreeTrafficAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3S3Configuration) GetFreeTrafficAmountOk() (*int32, bool) {
	if o == nil || isNil(o.FreeTrafficAmount) {
    return nil, false
	}
	return o.FreeTrafficAmount, true
}

// HasFreeTrafficAmount returns a boolean if a field has been set.
func (o *S3S3Configuration) HasFreeTrafficAmount() bool {
	if o != nil && !isNil(o.FreeTrafficAmount) {
		return true
	}

	return false
}

// SetFreeTrafficAmount gets a reference to the given int32 and assigns it to the FreeTrafficAmount field.
func (o *S3S3Configuration) SetFreeTrafficAmount(v int32) {
	o.FreeTrafficAmount = &v
}

// GetTrafficPriceDay returns the TrafficPriceDay field value if set, zero value otherwise.
func (o *S3S3Configuration) GetTrafficPriceDay() float64 {
	if o == nil || isNil(o.TrafficPriceDay) {
		var ret float64
		return ret
	}
	return *o.TrafficPriceDay
}

// GetTrafficPriceDayOk returns a tuple with the TrafficPriceDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3S3Configuration) GetTrafficPriceDayOk() (*float64, bool) {
	if o == nil || isNil(o.TrafficPriceDay) {
    return nil, false
	}
	return o.TrafficPriceDay, true
}

// HasTrafficPriceDay returns a boolean if a field has been set.
func (o *S3S3Configuration) HasTrafficPriceDay() bool {
	if o != nil && !isNil(o.TrafficPriceDay) {
		return true
	}

	return false
}

// SetTrafficPriceDay gets a reference to the given float64 and assigns it to the TrafficPriceDay field.
func (o *S3S3Configuration) SetTrafficPriceDay(v float64) {
	o.TrafficPriceDay = &v
}

// GetTrafficPriceMonth returns the TrafficPriceMonth field value if set, zero value otherwise.
func (o *S3S3Configuration) GetTrafficPriceMonth() float64 {
	if o == nil || isNil(o.TrafficPriceMonth) {
		var ret float64
		return ret
	}
	return *o.TrafficPriceMonth
}

// GetTrafficPriceMonthOk returns a tuple with the TrafficPriceMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3S3Configuration) GetTrafficPriceMonthOk() (*float64, bool) {
	if o == nil || isNil(o.TrafficPriceMonth) {
    return nil, false
	}
	return o.TrafficPriceMonth, true
}

// HasTrafficPriceMonth returns a boolean if a field has been set.
func (o *S3S3Configuration) HasTrafficPriceMonth() bool {
	if o != nil && !isNil(o.TrafficPriceMonth) {
		return true
	}

	return false
}

// SetTrafficPriceMonth gets a reference to the given float64 and assigns it to the TrafficPriceMonth field.
func (o *S3S3Configuration) SetTrafficPriceMonth(v float64) {
	o.TrafficPriceMonth = &v
}

func (o S3S3Configuration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FreeTrafficAmount) {
		toSerialize["free_traffic_amount"] = o.FreeTrafficAmount
	}
	if !isNil(o.TrafficPriceDay) {
		toSerialize["traffic_price_day"] = o.TrafficPriceDay
	}
	if !isNil(o.TrafficPriceMonth) {
		toSerialize["traffic_price_month"] = o.TrafficPriceMonth
	}
	return json.Marshal(toSerialize)
}

type NullableS3S3Configuration struct {
	value *S3S3Configuration
	isSet bool
}

func (v NullableS3S3Configuration) Get() *S3S3Configuration {
	return v.value
}

func (v *NullableS3S3Configuration) Set(val *S3S3Configuration) {
	v.value = val
	v.isSet = true
}

func (v NullableS3S3Configuration) IsSet() bool {
	return v.isSet
}

func (v *NullableS3S3Configuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3S3Configuration(val *S3S3Configuration) *NullableS3S3Configuration {
	return &NullableS3S3Configuration{value: val, isSet: true}
}

func (v NullableS3S3Configuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3S3Configuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


