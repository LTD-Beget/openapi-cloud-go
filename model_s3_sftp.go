/*
API Управляемых сервисов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiCloud

import (
	"encoding/json"
)

// S3Sftp struct for S3Sftp
type S3Sftp struct {
	Host *string `json:"host,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Login *string `json:"login,omitempty"`
	Password *string `json:"password,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewS3Sftp instantiates a new S3Sftp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3Sftp() *S3Sftp {
	this := S3Sftp{}
	return &this
}

// NewS3SftpWithDefaults instantiates a new S3Sftp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3SftpWithDefaults() *S3Sftp {
	this := S3Sftp{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *S3Sftp) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Sftp) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
    return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *S3Sftp) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *S3Sftp) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *S3Sftp) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Sftp) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *S3Sftp) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *S3Sftp) SetPort(v int32) {
	o.Port = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *S3Sftp) GetLogin() string {
	if o == nil || isNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Sftp) GetLoginOk() (*string, bool) {
	if o == nil || isNil(o.Login) {
    return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *S3Sftp) HasLogin() bool {
	if o != nil && !isNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *S3Sftp) SetLogin(v string) {
	o.Login = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *S3Sftp) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Sftp) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *S3Sftp) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *S3Sftp) SetPassword(v string) {
	o.Password = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *S3Sftp) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Sftp) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *S3Sftp) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *S3Sftp) SetStatus(v string) {
	o.Status = &v
}

func (o S3Sftp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableS3Sftp struct {
	value *S3Sftp
	isSet bool
}

func (v NullableS3Sftp) Get() *S3Sftp {
	return v.value
}

func (v *NullableS3Sftp) Set(val *S3Sftp) {
	v.value = val
	v.isSet = true
}

func (v NullableS3Sftp) IsSet() bool {
	return v.isSet
}

func (v *NullableS3Sftp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3Sftp(val *S3Sftp) *NullableS3Sftp {
	return &NullableS3Sftp{value: val, isSet: true}
}

func (v NullableS3Sftp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3Sftp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


